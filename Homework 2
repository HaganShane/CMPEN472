**********************************************************
* Title: LED Light Blinking
*
* Objective: CMPSC 472 Homework 12
*
* Revision: V1.0
*
* Date: Feb. 3rd, 2021
*
* Programmer: Shane Hagan
*
* Company: Penn State University
*
* Algorithm: Simple parallel I/O use and time delay-loop demo
*
* Register Use: A: LED Light on/off state and Switch 1 on/off state
*               X, Y: Delay loop counters
*
* Memory Use:   RAM locations from $3000 for data
*               RAM locations from $3100 for program
*
* Input:        parameters hard coded in the program - PORTB
*               Switch 1 at PORTB bit 0
*               Switch 2 at PORTB bit 1
*               Switch 3 at PORTB bit 2
*               Switch 4 at PORTB bit 3
*
* Output:
*               LED 1 at PORTB bit 4
*               LED 2 at PORTB bit 5
*               LED 3 at PORTB bit 6
*               LED 4 at PORTB bit 7
*
* Observation:  This is a program that blinks LEDs and blinking period can be changed
*               with the delay loop counter value
*
* Note: also good template for comments and expectations for future programs
*
* Comments: developed and simulated using codewarrior
*
**********************************************************
* Parameter Declaration Section
*
* Export Symbols
          XDEF        pstart        ; export 'pstart' symbol
          ABSENTRY    pstart        ; for assembly entry point
          
* Symbols and Macros
PORTA     EQU         $0000         ; i/o port A addresses
DDRA      EQU         $0002
PORTB     EQU         $0001         ; i/o port B addresses
DDRB      EQU         $0003         

**********************************************************
* Data Section: address used [ $3000 to $30FF ] RAM Memory
*
          ORG         $3000         ; Reserved RAM memory for starting address
                                    ;   for data for CMPEN 472 class
Counter1  DC.W        $0100         ; X Register count number for the time delay
                                    ;   inner loop for msec                                   
Counter2  DC.W        $00BF         ; Y register count number for the time delay
                                    ;   outer loop for sec
                                    
                                    ; Remaining data memory space for stack,
                                    ;   up to program memory start  
*
**********************************************************
* Program Section: address used [ $3100 to $3FFF ] RAM Memory
*
          ORG         $3100         ; Program start address, in RAM
pstart    LDS         #$3100        ; initialize the stack pointer

          ;LDAA        #%11110000    ; LED 1,2,3,4 at PORTB bit 4,5,6,7 FOR CSM-12C128 board
          LDAA        #%11111111    ; LED 1,2,3,4 AT PORTB bit 4,5,6,7 FOR simulation only
          STAA        DDRB          ; set PORTB bit 4,5,6,7 as output
          
          LDAA        #%00000000
          STAA        PORTB         ; Turn off LED 1,2,3,4 (all bits in PORTB, for the simulation)
     
; modified below for submission. Will alternate LED 1/4          
mainLoop
          BSET        PORTB,%10000000   ; Turn on LED 4 at PORTB bit 7
          BCLR        PORTB,%00010000   ; Turn off LED 1 at PORTB bit 4
          JSR         delay1sec         ; wait for 1 second
          
          BCLR        PORTB,%10000000   ; Turn off LED 4 at PORTB bit 7
          BSET        PORTB,%00010000   ; Turn on LED 1 at PORTB bit 4
          JSR         delay1sec         ; wait for 1 second
          

          
          LDAA        PORTB             
          ANDA        #%00000001        ; read switch 1 at PORTB bit 0
          BNE         sw1pushed         ; check to see if it is pushed
          
sw1notpsh BCLR        PORTB,%00010000   ; turn OFF LED 1 at PORTB bit 4
          BRA         mainLoop     
   
   
; modified below, turn on and off all the lights!!!         
sw1pushed 
          BCLR        PORTB,%10000000   ; Turn OFF LED 4 at PORTB bit 7 (SET THEM TO OFF)
          BCLR        PORTB,%00010000   ; Turn OFF LED 1 at PORTB bit 4
          
          BSET        PORTB,%00100000   ; Turn on LED 2 at PORTB bit 5
          BCLR        PORTB,%01000000   ; Turn off LED 3 at PORTB bit 6
          JSR         delay1sec         ; wait for 1 second
          
          BCLR        PORTB,%00100000   ; Turn off LED 2 at PORTB bit 5
          BSET        PORTB,%01000000   ; Turn on LED 3 at PORTB bit 6
          BRA         mainLoop    
          
*
**********************************************************
* Subroutine Section: address used [ $3100 to $3FFF ] RAM Memory
*  

;*********************************************************
; delay1sec subroutine
;
;
;
; 

delay1sec 
          PSHY                          ; save Y
          LDY         Counter2          ; long delay by
          
dly1Loop  JSR         delayMS           ; total time delay = Y * delayMS
          DEY
          BNE         dly1Loop
          
          PULY                          ; restore Y
          RTS                           ; return
          
;*********************************************************
; delayMS subroutine
;
; This subroutine will cause a few msec. delay
;
; Input: a 16 bit count number in Counter1
; Output: time delay, CPU cycle waisted
; Register in use: X register, as counter
; Memory Locations in use: a 16 bit input number at Counter1

delayMS   
          PSHX                          ; save X
          LDX         Counter1          ; short delay 
          
dlyMSLoop NOP                           ; total time delay = X * NOP
          DEX
          BNE         dlyMSLoop
          
          PULX                          ; restore X
          RTS                           ; return
          
          
*
* Any other subroutines here
*

          end                           ; last line of the file
  
